## Get 95% CI (approximate, not estimated)
data.h <- data %>% group_by(Story, Emotion) %>%
summarise(sd = sd(Val), Val = mean(Val),) %>%
mutate(SE = sd / sqrt(length(unique(data$ID))),
CI_lower = Val - 1.96*SE,
CI_upper = Val + 1.96*SE) %>%
dplyr::select(Story, Emotion, Val, CI_lower, CI_upper)
data.m <- read.table("../model_prediction/Exp1_svm_limit_0.014_var.csv", header = T, sep = ",") %>%
group_by(Story, Emotion) %>%
summarise(Val = mean(Val)) %>%
mutate(CI_lower = Val, CI_upper = Val)
data.b <- data.h %>%
mutate(Source = "Human") %>%
rbind(data.m %>% mutate(Source = "Model"))
## Change the order of the x-axis and facet
data.b$Story <- factor(data.b$Story, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
data.b$Emotion <- factor(data.b$Emotion, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
df_nonzero <- data.b[data.b$Val != 0,]
df_nonzero$ymin <- ifelse(df_nonzero$Value - df_nonzero$Error < 0, 0, df_nonzero$Value - df_nonzero$Error)
df_nonzero$ymin <- ifelse(df_nonzero$Val - df_nonzero$Error < 0, 0, df_nonzero$Val - df_nonzero$Error)
View(data.h)
## Get 95% CI (approximate, not estimated)
data.h <- data %>%
group_by(Story, Emotion) %>%
summarise(sd = sd(Val), Val = mean(Val),) %>%
mutate(SE = sd / sqrt(length(unique(data$ID))),
CI_lower = pmax(Val - 1.96*SE, 0),
CI_upper = pmin(Val + 1.96*SE, 1)) %>%
dplyr::select(Story, Emotion, Val, CI_lower, CI_upper)
data.m <- read.table("../model_prediction/Exp1_svm_limit_0.014_var.csv", header = T, sep = ",") %>%
group_by(Story, Emotion) %>%
summarise(Val = mean(Val)) %>%
mutate(CI_lower = Val, CI_upper = Val)
data.b <- data.h %>%
mutate(Source = "Human") %>%
rbind(data.m %>% mutate(Source = "Model"))
## Change the order of the x-axis and facet
data.b$Story <- factor(data.b$Story, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
data.b$Emotion <- factor(data.b$Emotion, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
df_nonzero <- data.b[data.b$Val != 0,]
ggplot(data.b, aes(Emotion, Val, fill = Source)) +
geom_bar(stat = "identity",width = 0.8, position = position_dodge(0.85)) +
geom_errorbar(data = df_nonzero, aes(ymin = ifelse(Source == "Human", CI_lower, NA),
ymax = ifelse(Source == "Human", CI_upper, NA)),
width = 0.2, position = position_dodge(0.85)) +
facet_grid(Story ~ .) +
ylab("Intensity") + xlab('Emotion')+
scale_y_continuous(limits = c(0,1),breaks = c(0,0.5,1))+
theme_Publication() + scale_fill_Publication() +
theme(legend.position = c(0.92, 0.96),
legend.margin = margin(1, 1, 1,1, "mm"),
legend.title=element_blank(),
legend.background = element_rect(fill='transparent'),
panel.grid.major.x = element_blank() ,
legend.key.size = unit(0.9, "lines"),
legend.box.background = element_rect(colour = "black",fill="transparent"),
legend.spacing.y = unit(0, "mm"))
View(df_nonzero)
View(data.b)
## Analyse the experiments of the RL emotion study
library(tidyverse)
library(lme4)
library(lmerTest)
source("theme-publication.R")
data <- read.table("../source_data/Exp2_human.csv", header = T, sep = ";") %>%
pivot_longer(cols = starts_with("Emo."),
names_to = "Emotion",
names_prefix = "Emo.",
values_to = "Val")
setwd("~/Documents/PhD/eurus_phd/Exp2/R_analysis")
## Analyse the experiments of the RL emotion study
library(tidyverse)
library(lme4)
library(lmerTest)
source("theme-publication.R")
data <- read.table("../source_data/Exp2_human.csv", header = T, sep = ";") %>%
pivot_longer(cols = starts_with("Emo."),
names_to = "Emotion",
names_prefix = "Emo.",
values_to = "Val")
## test the hypothesis
model <- lmer(Val ~ Story*Emotion + (1|ID), data = data)
anova(model)
## Get 95% CI (approximate, not estimated)
data.h <- data %>% group_by(Story, Emotion) %>%
summarise(sd = sd(Val),Val = mean(Val)) %>%
mutate(SE = sd / sqrt(length(unique(data$ID))),
CI_lower = Val - 1.96*SE,
CI_upper = Val + 1.96*SE) %>%
dplyr::select(Story, Emotion, Val, CI_lower, CI_upper)
data.m <- read.table("../model_prediction/Exp2_svm_free_0.0013_var.csv", header = T, sep = ",") %>%
group_by(Story, Emotion) %>%
summarise(Val = mean(Val)) %>%
mutate(CI_lower = Val, CI_upper = Val)
data.b <- data.h %>%
mutate(Source = "Human") %>%
rbind(data.m %>% mutate(Source = "Model"))
ggplot(data.b, aes(Emotion, Val, fill = Source)) +
geom_bar(stat = "identity",width = 0.8, position = position_dodge(0.85)) +
geom_errorbar(aes(ymin = ifelse(Source == "Human", CI_lower, NA),
ymax = ifelse(Source == "Human", CI_upper, NA)),
width = 0.2, position = position_dodge(0.85)) +
facet_grid(Story ~ .) +
ylab("Intensity") + xlab('Emotion')+
scale_y_continuous(limits = c(0,0.6),breaks = c(0,0.3,0.6))+
theme_Publication() + scale_fill_Publication() +
theme(legend.position = c(0.92, 0.96),
legend.margin = margin(1, 1, 1,1, "mm"),
legend.title=element_blank(),
legend.background = element_rect(fill='transparent'),
panel.grid.major.x = element_blank() ,
legend.key.size = unit(0.9, "lines"),
legend.box.background = element_rect(colour = "black",fill="transparent"),
legend.spacing.y = unit(0, "mm"))
data2 <- read.table("../source_data/Exp2_human.csv", header = T, sep = ";") %>%
pivot_longer(cols = starts_with("mc"),
names_to = "Emotion",
names_prefix = "mc.",
values_to = "Val")
## test the hypothesis
model <- lmer(Val ~ Story*Emotion + (1|ID), data = data)
anova(model)
## Get 95% CI (approximate, not estimated)
data.h2 <- data2 %>% group_by(Story, Emotion) %>%
summarise(sd = sd(Val),Val = mean(Val)) %>%
mutate(SE = sd / sqrt(length(unique(data$ID))),
CI_lower = Val - 1.96*SE,
CI_upper = Val + 1.96*SE) %>%
dplyr::select(Story, Emotion, Val, CI_lower, CI_upper)
data.m2 <- read.table("../model_prediction/Exp2_svm_limit_0.0034_var.csv",
header = T, sep = ",") %>%
group_by(Story, Emotion) %>%
summarise(Val = mean(Val))
data.b2 <- data.h2 %>%
mutate(Source = "Human") %>%
rbind(data.m2 %>% mutate(Source = "Model"))
ggplot(data.b2, aes(Emotion, Val, fill = Source)) +
geom_bar(stat = "identity",width = 0.8, position = position_dodge(0.85)) +
geom_errorbar(aes(ymin = ifelse(Source == "Human", CI_lower, NA),
ymax = ifelse(Source == "Human", CI_upper, NA)),
width = 0.2, position = position_dodge(0.85)) +
facet_grid(Story ~ .) +
ylab("Intensity") + xlab('Emotion')+
scale_y_continuous(limits = c(-0.1,1),breaks = c(0,0.5,1))+
theme_Publication() + scale_fill_Publication() +
theme(legend.position = c(0.92, 0.96),
legend.margin = margin(1, 1, 1,1, "mm"),
legend.title=element_blank(),
legend.background = element_rect(fill='transparent'),
panel.grid.major.x = element_blank() ,
legend.key.size = unit(0.9, "lines"),
legend.box.background = element_rect(colour = "black",fill="transparent"),
legend.spacing.y = unit(0, "mm"))
ggplot(data.b2, aes(Emotion, Val, fill = Source)) +
geom_bar(stat = "identity",width = 0.8, position = position_dodge(0.85)) +
geom_errorbar(aes(ymin = ifelse(Source == "Human", CI_lower, NA),
ymax = ifelse(Source == "Human", CI_upper, NA)),
width = 0.2, position = position_dodge(0.85)) +
facet_grid(Story ~ .) +
ylab("Intensity") + xlab('Emotion')+
scale_y_continuous(limits = c(0,1),breaks = c(0,0.5,1))+
theme_Publication() + scale_fill_Publication() +
theme(legend.position = c(0.92, 0.96),
legend.margin = margin(1, 1, 1,1, "mm"),
legend.title=element_blank(),
legend.background = element_rect(fill='transparent'),
panel.grid.major.x = element_blank() ,
legend.key.size = unit(0.9, "lines"),
legend.box.background = element_rect(colour = "black",fill="transparent"),
legend.spacing.y = unit(0, "mm"))
## Get 95% CI (approximate, not estimated)
data.h2 <- data2 %>% group_by(Story, Emotion) %>%
summarise(sd = sd(Val),Val = mean(Val)) %>%
mutate(SE = sd / sqrt(length(unique(data$ID))),
CI_lower = pmax(Val - 1.96*SE, 0),
CI_upper = pmin(Val + 1.96*SE, 1)) %>%
dplyr::select(Story, Emotion, Val, CI_lower, CI_upper)
data.m2 <- read.table("../model_prediction/Exp2_svm_limit_0.0034_var.csv",
header = T, sep = ",") %>%
group_by(Story, Emotion) %>%
summarise(Val = mean(Val))
data.b2 <- data.h2 %>%
mutate(Source = "Human") %>%
rbind(data.m2 %>% mutate(Source = "Model"))
ggplot(data.b2, aes(Emotion, Val, fill = Source)) +
geom_bar(stat = "identity",width = 0.8, position = position_dodge(0.85)) +
geom_errorbar(aes(ymin = ifelse(Source == "Human", CI_lower, NA),
ymax = ifelse(Source == "Human", CI_upper, NA)),
width = 0.2, position = position_dodge(0.85)) +
facet_grid(Story ~ .) +
ylab("Intensity") + xlab('Emotion')+
scale_y_continuous(limits = c(0,1),breaks = c(0,0.5,1))+
theme_Publication() + scale_fill_Publication() +
theme(legend.position = c(0.92, 0.96),
legend.margin = margin(1, 1, 1,1, "mm"),
legend.title=element_blank(),
legend.background = element_rect(fill='transparent'),
panel.grid.major.x = element_blank() ,
legend.key.size = unit(0.9, "lines"),
legend.box.background = element_rect(colour = "black",fill="transparent"),
legend.spacing.y = unit(0, "mm"))
ggsave(file = "../plots/exp2_limit_CI.jpg", width=8, height=8)
setwd("~/Documents/PhD/eurus_phd/Exp1/R_analysis")
## Analyse the experiments of the RL emotion study
library(tidyverse)
library(lme4)
library(lmerTest)
library(Cairo)
source("theme-publication.R")
# Exp1_human.csv for free rating human result
data <- read.table("../source_data/Exp1_human.csv", header = T, sep = ";") %>%
pivot_longer(cols = starts_with("Emo."),
names_to = "Emotion",
names_prefix = "Emo.",
values_to = "Val")
## test the hypothesis
model <- lmer(Val ~ Story*Emotion + (1|ID), data = data)
anova(model)
## Get 95% CI (approximate, not estimated)
data.h <- data %>% group_by(Story, Emotion) %>%
summarise(sd = sd(Val),
Val = mean(Val),
) %>%
mutate(SE = sd / sqrt(length(unique(data$ID))),
CI_lower = Val - 1.96*SE,
CI_upper = Val + 1.96*SE) %>%
dplyr::select(Story, Emotion, Val, CI_lower, CI_upper)
data.m <- read.table("../model_prediction/Exp1_svm_free_0.0032_var.csv", header = T, sep = ",") %>%
group_by(Story, Emotion) %>%
summarise(Val = mean(Val)) %>%
mutate(CI_lower = Val, CI_upper = Val)
## Visualise both data - combine model and human data
data.b <- data.h %>%
mutate(Source = "Human") %>%
rbind(data.m %>% mutate(Source = "Model"))
## Change the order of the x-axis and facet
data.b$Story <- factor(data.b$Story, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
data.b$Emotion <- factor(data.b$Emotion, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
## Visualize both data - ggplot
ggplot(data.b, aes(Emotion, Val, fill = Source)) +
geom_bar(stat = "identity",width = 0.8, position = position_dodge(0.85)) +
geom_errorbar(aes(ymin = ifelse(Source == "Human", CI_lower, NA),
ymax = ifelse(Source == "Human", CI_upper, NA)),
width = 0.2, position = position_dodge(0.85)) +
facet_grid(Story ~ .) +
ylab("Intensity") + xlab('Emotion')+
scale_y_continuous(limits = c(0,0.6),breaks = c(0,0.3,0.6))+
theme_Publication() + scale_fill_Publication() +
theme(legend.position = c(0.92, 0.96),
legend.margin = margin(1, 1, 1,1, "mm"),
legend.title=element_blank(),
legend.background = element_rect(fill='transparent'),
panel.grid.major.x = element_blank() ,
legend.key.size = unit(0.9, "lines"),
legend.box.background = element_rect(colour = "black",fill="transparent"),
legend.spacing.y = unit(0, "mm"))
data.h <- data %>%
group_by(Story, Emotion) %>%
summarise(sd = sd(Val), Val = mean(Val),) %>%
mutate(SE = sd / sqrt(length(unique(data$ID))),
CI_lower = pmax(Val - 1.96*SE, 0),
CI_upper = pmin(Val + 1.96*SE, 1)) %>%
dplyr::select(Story, Emotion, Val, CI_lower, CI_upper)
data.m <- read.table("../model_prediction/Exp1_svm_free_0.0032_var.csv", header = T, sep = ",") %>%
group_by(Story, Emotion) %>%
summarise(Val = mean(Val)) %>%
mutate(CI_lower = Val, CI_upper = Val)
## Visualise both data - combine model and human data
data.b <- data.h %>%
mutate(Source = "Human") %>%
rbind(data.m %>% mutate(Source = "Model"))
## Change the order of the x-axis and facet
data.b$Story <- factor(data.b$Story, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
data.b$Emotion <- factor(data.b$Emotion, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
## Visualize both data - ggplot
ggplot(data.b, aes(Emotion, Val, fill = Source)) +
geom_bar(stat = "identity",width = 0.8, position = position_dodge(0.85)) +
geom_errorbar(aes(ymin = ifelse(Source == "Human", CI_lower, NA),
ymax = ifelse(Source == "Human", CI_upper, NA)),
width = 0.2, position = position_dodge(0.85)) +
facet_grid(Story ~ .) +
ylab("Intensity") + xlab('Emotion')+
scale_y_continuous(limits = c(0,0.6),breaks = c(0,0.3,0.6))+
theme_Publication() + scale_fill_Publication() +
theme(legend.position = c(0.92, 0.96),
legend.margin = margin(1, 1, 1,1, "mm"),
legend.title=element_blank(),
legend.background = element_rect(fill='transparent'),
panel.grid.major.x = element_blank() ,
legend.key.size = unit(0.9, "lines"),
legend.box.background = element_rect(colour = "black",fill="transparent"),
legend.spacing.y = unit(0, "mm"))
ggsave(file = "../plots/exp1_free.jpg", width=8, height=8,dpi=300)
## Analyse the experiments of the RL emotion study
library(tidyverse)
library(lme4)
library(lmerTest)
library(Cairo)
source("theme-publication.R")
# Exp1_human_limited.csv for limited human result
data <- read.table("../source_data/Exp1_human_limit.csv", header = T, sep = ";") %>%
pivot_longer(cols = starts_with("Em."),
names_to = "Emotion",
names_prefix = "Em.",
values_to = "Val")
## test the hypothesis
model <- lmer(Val ~ Story*Emotion + (1|ID), data = data)
anova(model)
## Get 95% CI (approximate, not estimated)
data.h <- data %>%
group_by(Story, Emotion) %>%
summarise(sd = sd(Val), Val = mean(Val),) %>%
mutate(SE = sd / sqrt(length(unique(data$ID))),
CI_lower = pmax(Val - 1.96*SE, 0),
CI_upper = pmin(Val + 1.96*SE, 1)) %>%
dplyr::select(Story, Emotion, Val, CI_lower, CI_upper)
data.m <- read.table("../model_prediction/Exp1_svm_limit_0.014_var.csv", header = T, sep = ",") %>%
group_by(Story, Emotion) %>%
summarise(Val = mean(Val)) %>%
mutate(CI_lower = Val, CI_upper = Val)
data.b <- data.h %>%
mutate(Source = "Human") %>%
rbind(data.m %>% mutate(Source = "Model"))
## Change the order of the x-axis and facet
data.b$Story <- factor(data.b$Story, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
data.b$Emotion <- factor(data.b$Emotion, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
df_nonzero <- data.b[data.b$Val != 0,]
ggplot(data.b, aes(Emotion, Val, fill = Source)) +
geom_bar(stat = "identity",width = 0.8, position = position_dodge(0.85)) +
geom_errorbar(data = df_nonzero, aes(ymin = ifelse(Source == "Human", CI_lower, NA),
ymax = ifelse(Source == "Human", CI_upper, NA)),
width = 0.2, position = position_dodge(0.85)) +
facet_grid(Story ~ .) +
ylab("Intensity") + xlab('Emotion')+
scale_y_continuous(limits = c(0,1),breaks = c(0,0.5,1))+
theme_Publication() + scale_fill_Publication() +
theme(legend.position = c(0.92, 0.96),
legend.margin = margin(1, 1, 1,1, "mm"),
legend.title=element_blank(),
legend.background = element_rect(fill='transparent'),
panel.grid.major.x = element_blank() ,
legend.key.size = unit(0.9, "lines"),
legend.box.background = element_rect(colour = "black",fill="transparent"),
legend.spacing.y = unit(0, "mm"))
ggsave(file = "../plots/exp1_limit.jpg", width=8, height=8,dpi=300)
setwd("~/Documents/PhD/eurus_phd/exp3")
## Analyse the experiments of the RL emotion study
library(tidyverse)
library(lme4)
library(lmerTest)
source("theme-publication.R")
data <- read.table("Exp3_human_limit.csv", header = T, sep = ";") %>%
pivot_longer(cols = starts_with("Emo."),
names_to = "Emotion",
names_prefix = "Emo.",
values_to = "Val")
# Visualise the effect
ggplot(data %>% group_by(Task, Emotion) %>% summarise(Val = mean(Val)),
aes(Emotion, Val)) +
geom_bar(stat = "identity") +
facet_grid(Task ~ .) +
ylim(0,0.5)
## Visualise the effect
ggplot(data %>% group_by(Task, Emotion) %>%
summarise(MeanVal = mean(Val),
SE = sd(Val, na.rm = TRUE) / sqrt(n()),  # standard error
LowerCI = MeanVal - qt(0.975, df=n()-1) * SE,  # lower bound of 95% CI
UpperCI = MeanVal + qt(0.975, df=n()-1) * SE   # upper bound of 95% CI
),
aes(x = Emotion, y = MeanVal)) +
geom_bar(stat = "identity", position = "dodge", fill = "orange") +
scale_y_continuous(limits = c(-0.05,1),breaks = c(0,0.5,1))+
geom_errorbar(aes(ymin = LowerCI, ymax = UpperCI), width = 0.2, position = position_dodge(0.9)) +
labs(x = "Task", y = "Mean Value", fill = "Emotion") +
facet_grid(Task ~ .)+
theme_Publication() +
theme(legend.position = c(0.92, 0.96),
legend.margin = margin(1, 1, 1,1, "mm"),
legend.title=element_blank(),
legend.background = element_rect(fill='transparent'),
panel.grid.major.x = element_blank() ,
legend.key.size = unit(0.9, "lines"),
legend.box.background = element_rect(colour = "black",fill="transparent"),
legend.spacing.y = unit(0, "mm"))
setwd("~/Documents/PhD/eurus_phd/Exp1/R_analysis")
## test the hypothesis
model <- lmer(Val ~ Story*Emotion + (1|ID), data = data)
anova(model)
## Analyse the experiments of the RL emotion study
library(tidyverse)
library(lme4)
library(lmerTest)
library(Cairo)
source("theme-publication.R")
# Exp1_human.csv for free rating human result
data <- read.table("../source_data/Exp1_human.csv", header = T, sep = ";") %>%
pivot_longer(cols = starts_with("Emo."),
names_to = "Emotion",
names_prefix = "Emo.",
values_to = "Val")
## test the hypothesis
model <- lmer(Val ~ Story*Emotion + (1|ID), data = data)
anova(model)
View(data)
## Analyse the experiments of the RL emotion study
library(tidyverse)
library(lme4)
library(lmerTest)
library(Cairo)
source("theme-publication.R")
# Exp1_human.csv for free rating human result
data <- read.table("../source_data/Exp1_human.csv", header = T, sep = ";") %>%
pivot_longer(cols = starts_with("Emo."),
names_to = "Emotion",
names_prefix = "Emo.",
values_to = "Val")
## test the hypothesis
model <- lmer(Val ~ Story*Emotion + (1|ID), data = data)
anova(model)
## Get 95% CI (approximate, not estimated)
data.h <- data %>% group_by(Story, Emotion) %>%
summarise(sd = sd(Val),
Val = mean(Val),
) %>%
mutate(SE = sd / sqrt(length(unique(data$ID))),
CI_lower = Val - 1.96*SE,
CI_upper = Val + 1.96*SE) %>%
dplyr::select(Story, Emotion, Val, CI_lower, CI_upper)
data.m <- read.table("../model_prediction/Exp1_svm_free_0.0032_var.csv", header = T, sep = ",") %>%
group_by(Story, Emotion) %>%
summarise(Val = mean(Val)) %>%
mutate(CI_lower = Val, CI_upper = Val)
## Visualise both data - combine model and human data
data.b <- data.h %>%
mutate(Source = "Human") %>%
rbind(data.m %>% mutate(Source = "Model"))
## Change the order of the x-axis and facet
data.b$Story <- factor(data.b$Story, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
data.b$Emotion <- factor(data.b$Emotion, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
## Visualize both data - ggplot
ggplot(data.b, aes(Emotion, Val, fill = Source)) +
geom_bar(stat = "identity",width = 0.8, position = position_dodge(0.85)) +
geom_errorbar(aes(ymin = ifelse(Source == "Human", CI_lower, NA),
ymax = ifelse(Source == "Human", CI_upper, NA)),
width = 0.2, position = position_dodge(0.85)) +
facet_grid(Story ~ .) +
ylab("Intensity") + xlab('Emotion')+
scale_y_continuous(limits = c(0,0.6),breaks = c(0,0.3,0.6))+
theme_Publication() + scale_fill_Publication() +
theme(legend.position = c(0.92, 0.96),
legend.margin = margin(1, 1, 1,1, "mm"),
legend.title=element_blank(),
legend.background = element_rect(fill='transparent'),
panel.grid.major.x = element_blank() ,
legend.key.size = unit(0.9, "lines"),
legend.box.background = element_rect(colour = "black",fill="transparent"),
legend.spacing.y = unit(0, "mm"))
## Analyse the experiments of the RL emotion study
library(tidyverse)
library(lme4)
library(lmerTest)
library(Cairo)
source("theme-publication.R")
# Exp1_human_limited.csv for limited human result
data <- read.table("../source_data/Exp1_human_limit.csv", header = T, sep = ";") %>%
pivot_longer(cols = starts_with("Em."),
names_to = "Emotion",
names_prefix = "Em.",
values_to = "Val")
## Standardise emotion within stories
data %>% group_by(Story, Emotion) %>% summarise(Val = mean(Val)) %>%
mutate(Val = Val/sum(Val))
data.m <- read.table("../model_prediction/Exp1_svm_limit_0.014_var.csv", header = T, sep = ",") %>%
group_by(Story, Emotion) %>%
summarise(Val = mean(Val))
## Visualise both data - combine model and human data
data.b <- data %>% group_by(Story, Emotion) %>% summarise(Val = mean(Val)) %>%
mutate(Val = Val/sum(Val)) %>%
mutate(Source = "Human") %>%
rbind(data.m %>% mutate(Source = "Model"))
## Change the order of the x-axis and facet
data.b$Story <- factor(data.b$Story, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
data.b$Emotion <- factor(data.b$Emotion, levels = c("Happiness","Joy","Pride",
"Boredom","Fear","Sadness","Shame"))
## Visualize both data - ggplot
ggplot(data.b, aes(Emotion, Val, fill = Source,)) +
geom_bar(stat = "identity",width = 0.8, position = position_dodge(0.85)) +
facet_grid(Story ~ .) +
ylab("Intensity") + xlab('Emotion')+
scale_y_continuous(limits = c(0,1),breaks = c(0,0.5,1))+
theme_Publication() + scale_fill_Publication() +
theme(legend.position = c(0.92, 0.96),
legend.margin = margin(1, 1, 1,1, "mm"),
legend.title=element_blank(),
legend.background = element_rect(fill='transparent'),
panel.grid.major.x = element_blank() ,
legend.key.size = unit(0.9, "lines"),
legend.box.background = element_rect(colour = "black",fill="transparent"),
legend.spacing.y = unit(0, "mm"))
